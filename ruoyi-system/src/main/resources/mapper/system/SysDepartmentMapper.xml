<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysDepartmentMapper">
    
    <resultMap type="SysDepartment" id="SysDepartmentResult">
        <result property="departmentId"    column="department_id"    />
        <result property="departmentName"    column="department_name"    />
        <result property="parentId"    column="parent_id"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="parentName" column="parent_name" />
    </resultMap>

    <sql id="selectSysDepartmentVo">
        select department_id, department_name, parent_id, ancestors from sys_department
    </sql>

    <select id="selectSysDepartmentList" parameterType="SysDepartment" resultMap="SysDepartmentResult">
        <include refid="selectSysDepartmentVo"/>
        <where>  
            <if test="departmentName != null  and departmentName != ''"> and department_name like concat('%', #{departmentName}, '%')</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="ancestors != null  and ancestors != ''"> and ancestors = #{ancestors}</if>
        </where>
        order by parent_id
    </select>
    
    <select id="selectSysDepartmentById" parameterType="Long" resultMap="SysDepartmentResult">
        select t.department_id, t.department_name, t.parent_id, t.ancestors, p.department_name as parent_name
        from sys_department t
        left join sys_department p on p.department_id = t.parent_id
        where t.department_id = #{departmentId}
    </select>
        
    <insert id="insertSysDepartment" parameterType="SysDepartment" useGeneratedKeys="true" keyProperty="departmentId">
        insert into sys_department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="departmentName != null and departmentName != ''">department_name,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="ancestors != null">ancestors,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="departmentName != null and departmentName != ''">#{departmentName},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="ancestors != null">#{ancestors},</if>
         </trim>
    </insert>

    <update id="updateSysDepartment" parameterType="SysDepartment">
        update sys_department
        <trim prefix="SET" suffixOverrides=",">
            <if test="departmentName != null and departmentName != ''">department_name = #{departmentName},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="ancestors != null">ancestors = #{ancestors},</if>
        </trim>
        where department_id = #{departmentId}
    </update>

    <update id="updateDepartmentChildren" parameterType="java.util.List">
        update sys_department set ancestors =
        <foreach collection="departments" item="item" index="index"
                 separator=" " open="case department_id" close="end">
            when #{item.departmentId} then #{item.ancestors}
        </foreach>
        where dept_id in
        <foreach collection="departments" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.departmentId}
        </foreach>
    </update>

    <select id="selectChildrenDepartmentById" parameterType="Long" resultMap="SysDepartmentResult">
        select * from sys_department where find_in_set(#{departmentId}, ancestors)
    </select>


    <delete id="deleteSysDepartmentById" parameterType="Long">
        delete from sys_department where department_id = #{departmentId}
    </delete>

    <delete id="deleteSysDepartmentByIds" parameterType="String">
        delete from sys_department where department_id in 
        <foreach item="departmentId" collection="array" open="(" separator="," close=")">
            #{departmentId}
        </foreach>
    </delete>

</mapper>